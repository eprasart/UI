<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAANjr9RwUqgAAACBjSFJNAAB6
        JQAAgIMAAPQlAACE0QAAbV8AAOhsAAA8iwAAG1iD5wd4AAAACXBIWXMAAAsPAAALDwGS+QOlAAAEMklE
        QVRIS62Ve0yTZxTGD0SMSsPmEma2BWUTIlMIiEOGGQE7GFQUiJtyFRCYXEYNyFVALlJgoLCLxMsADSXC
        tFzLqgiMDKO4QWYUxEKslwnOLbqZiSta/3h2WsYSla0fyZqcvMmXfs/vnOec77wEgPQx11+sNbXuc6Ez
        /J7JbO/+oysUoI5b8FQvJLWlxlOlgXh64wB0V4vQme+Ow2up/nnInAAx1tSm0xRjcCtBd70MujEZdEMZ
        eDIQh6neAGhbHNDpSc/YMBeAWW3UW9Bd/Bi6S0l4cjEWj8/5Y6rHA1qVE7RN1tAOVuHbLYRWV3o8U4kg
        wJD8w96ItYRDboSprnWY6nbncMPUaRdolSvx8LgzutcZMo/MXk0Hz7sT5HbTlRgFaNriEP4OwW8FocLb
        jG1YzmEzfSqscP9TM6Qvpi7Wsvg7a5MNIso7amUAmP8XwPRWdzr0ma9fRvBcSvjSl/BIPh+P6kV8mmHy
        GGGymqBa/6zvLGzqQFTCp+OsgBt9RWn7dtghynVaWGxN8FpO+MKLBasIf9bbQjdcA21vCX7NWYSb7Dtn
        /OC5CTKM7QuAtuwISFkohv02CL9J8GVxvUVSfrbfiVD0LmGn56tIES9BrvdrKA+2RU2w3awf0QuA9txt
        mJzoQaKfNXxYWGJD2MgNC1hFSPUhZISuwO5wO+yJWIWCKHvIYhww1rIDe93mCQRkh+G+uhoPrinQVBWO
        TW8TNtsTdnFVmRLCCZkXCrbbY2+0A+SFPvhO5ghViiUq3c2FAVqzgtGSYYrxswX4ZbASD28rkMaZx3oQ
        4riZiWJCe5kElzvScSp5MVSpSyAP5QlzXyAMUBPtfVexi3DpoAfG+/Ixca4Ik3fakcbZZ/oRsjcSfhs9
        yuKv4BvOvJYb3BQvQrHLwklBu6g6Ujyu5AruXTkCdWMIRuo/wq2eTGjvnUZ5EOGP282GzBu3m+NQAKEh
        gqBMMkGe4/yfBQHKJKsHunIsMN5fjDsXSjF6Mhzq41txXSVlUA5UyS+jlL/UKq5GHsZrIYErSOLm25qq
        BQFSVr6u6Mu3xN0fyjFxtpBFsxgQhGvN0YaQhy9E5ftksOZkNKEzWQR5LCF5GfULAgQQ7dd7P1DhgJ96
        d2PoiC80yniMfh3G1WxDXdgifLWZUMcbtUM6D1VchTJvDQItqUgQQH9xOBPtuXkmFf2Fb0DT8QlG6rZA
        3RDEEYKGGBE+54nSWyML5InKdYLj9FqY24WzhihHo0zA97KlGG0M5QjBVW54faQICrakhKtoy7KHPpl/
        Eze6Td2Ido4pIvDjZ84YrpVg5Jg/mhItUBFMaM6wgytRqrEr1ui69iEK1md++bAYFyrcIE94CU2pNniP
        KN6YuNEKZgR8iYKGayQ4X+aCE1IriPliESIuGKD/YyCR/5X2lN8/IAoRKj4rYMaz//v8C2ICpwESaloP
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>